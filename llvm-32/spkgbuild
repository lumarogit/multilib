# description	: Collection of modular and reusable compiler and toolchain technologies
# depends	: libffi-32 libxml2-32 ncurses-32 llvm

name=llvm-32
version=17.0.6
release=1
source="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-$version.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/cmake-${version}.src.tar.xz
	https://github.com/llvm/llvm-project/releases/download/llvmorg-${version}/third-party-${version}.src.tar.xz"
noextract="cmake-${version}.src.tar.xz third-party-${version}.src.tar.xz"

build() {
	export CC="gcc -m32"
	export CXX="g++ -m32"
	export PKG_CONFIG_LIBDIR="/usr/lib32/pkgconfig"

	cd llvm-$version.src

	# The upstream expects them extracted at the same level as the llvm tarball, and 
	# the extracted directories renamed to cmake and third-party:
	tar -xf $SRC/cmake-${version}.src.tar.xz
	tar -xf $SRC/third-party-${version}.src.tar.xz
	sed "/LLVM_COMMON_CMAKE_UTILS/s@../cmake@cmake-${version}.src@" -i CMakeLists.txt                 
	sed "/LLVM_THIRD_PARTY_DIR/s@../third-party@third-party-${version}.src@" \
		-i cmake/modules/HandleLLVMOptions.cmake

	# Fix Python scripts which use /usr/bin/env python to access the system Python:
	grep -rl '#!.*python' | xargs sed -i '1s/python$/python3/'


	
	cmake -B build -G Ninja \
	      -DCMAKE_INSTALL_PREFIX=/usr           \
	      -DLLVM_ENABLE_FFI=ON                  \
	      -DCMAKE_BUILD_TYPE=Release            \
	      -DLLVM_BUILD_LLVM_DYLIB=ON            \
      	      -DLLVM_LINK_LLVM_DYLIB=ON             \
	      -DLLVM_ENABLE_RTTI=ON                 \
	      -DLLVM_LIBDIR_SUFFIX=32               \
	      -DCMAKE_C_FLAGS:STRING=-m32           \
	      -DCMAKE_CXX_FLAGS:STRING=-m32         \
	      -DLLVM_TARGET_ARCH:STRING=i686        \
	      -DLLVM_DEFAULT_TARGET_TRIPLE="i686-pc-linux-gnu" \
	      -DLLVM_INCLUDE_BENCHMARKS=OFF \
	      -DLLVM_TARGETS_TO_BUILD='AMDGPU;BPF;NVPTX;WebAssembly;X86'\
	      -DLLVM_ENABLE_ZSTD=$(scratch isinstalled zstd-32 || echo OFF) \
	      -Wno-dev
	cmake --build build
	DESTDIR=$PKG cmake --install build

	# keep 32bit header and config
	mkdir -p $SRC/keep
	install -t $SRC/keep $PKG/usr/bin/llvm-config $PKG/usr/include/llvm/Config/llvm-config.h

	# remove unneeded files
	rm -rf $PKG/usr/bin $PKG/usr/include $PKG/usr/share $PKG/usr/libexec

	# install 32bit header and config
	install -m 0755 -D $SRC/keep/llvm-config $PKG/usr/bin/llvm-config-32
	install -m 0644 -D $SRC/keep/llvm-config.h $PKG/usr/include/llvm/Config/llvm-config-32.h
}
